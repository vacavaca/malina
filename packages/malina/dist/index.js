"use strict";Object.defineProperty(exports,"__esModule",{value:true});var e=require("malina-util");var t=require("diff");class n{constructor(t,n,i,r){this.template=t;this.state=n;this.actions=i;this.hooks=r;this.id=e.genRandomId(8)}static isViewDeclaration(e){return typeof e==="object"&&e!==null&&e.isViewDeclaration instanceof Function&&e.isViewDeclaration()}isViewDeclaration(){return true}decorate(...t){return e.compose(...t)(this)}}const i=(e,t=null,i=null,r=null)=>new n(e instanceof Function?e:()=>e,t,i,r);const r=n;class s{constructor(t,n={},i=[]){if(t==null)throw new Error("Node tag cannot be empty");this.tag=t;this.attrs=n||{};this.children=e.flatten(i)}static isNode(e){return typeof e==="object"&&e!==null&&e.isNode instanceof Function&&e.isNode()}isNode(){return true}toString(){const e=Object.keys(this.attrs).reduce((e,t)=>{const n=this.attrs[t];if(typeof n==="string")return`${e} ${t}="${n}"`;else if(n instanceof Function)return`${e} ${t}=[Function]`;else return`${e} ${t}={${JSON.stringify(n)}}`},"");const t=typeof this.tag==="string"?this.tag:"[View]";if(this.children.length>0){return`<${t}${e}>\n${this.children.map(e=>{if(e==null)return'\t""';const t=e.toString();return t.split("\n").map(e=>`\t${e}`).join("\n")})}\n</${t}>`}else return`<${t}${e}/>`}}const o=e=>s.isNode(e)&&r.isViewDeclaration(e.tag);const a=e=>s.isNode(e)&&!r.isViewDeclaration(e.tag);const l=e=>!(e instanceof Object)&&typeof e!=="object";const c=(e,t,...n)=>{const i=n.length===1&&Array.isArray(n[0])?n[0]:n;return new s(e,t,i)};function d(e,t,n,i,r,s,o){try{var a=e[s](o);var l=a.value}catch(e){n(e);return}if(a.done){t(l)}else{Promise.resolve(l).then(i,r)}}function u(e){return function(){var t=this,n=arguments;return new Promise(function(i,r){var s=e.apply(t,n);function o(e){d(s,i,r,o,a,"next",e)}function a(e){d(s,i,r,o,a,"throw",e)}o(undefined)})}}function h(e,t,n){if(t in e){Object.defineProperty(e,t,{value:n,enumerable:true,configurable:true,writable:true})}else{e[t]=n}return e}function f(e){for(var t=1;t<arguments.length;t++){var n=arguments[t]!=null?arguments[t]:{};var i=Object.keys(n);if(typeof Object.getOwnPropertySymbols==="function"){i=i.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))}i.forEach(function(t){h(e,t,n[t])})}return e}function m(e,t){return v(e)||p(e,t)||w()}function v(e){if(Array.isArray(e))return e}function p(e,t){var n=[];var i=true;var r=false;var s=undefined;try{for(var o=e[Symbol.iterator](),a;!(i=(a=o.next()).done);i=true){n.push(a.value);if(t&&n.length===t)break}}catch(e){r=true;s=e}finally{try{if(!i&&o["return"]!=null)o["return"]()}finally{if(r)throw s}}return n}function w(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}const y=e=>`on${e[0].toUpperCase()}${e.substr(1)}`;const g=e=>{const t=e.toLowerCase();return t.startsWith("on")?t.substr(2):t};class b{constructor(e){this.options=e}get svg(){return this.options.isSvg}get mounting(){return this.options.mounting}setSvg(e){return this.update({isSvg:e})}setMounting(e){return this.update({mounting:e})}update(e){return new b(f({},this.options,e))}}const x=()=>new b;const N=e=>Array.isArray(e)&&e.length===2&&e[0]instanceof Function;const E=(e,t)=>N(e)&&N(t)&&e[0]===t[0]&&e[1]===t[1];let A=false;let V=[];const k=e=>e.length===0;const T=(e,t)=>e.tag.id===t.tag.id;const P=e=>{if(!e.every((t,n)=>n===0||!o(t)||!o(e[n-1])||t.attrs.key||!T(t,e[n-1])))throw new Error("Every view node in an array must have a 'key' attribute");return e};const L=e=>{let t={};var n=true;var i=false;var r=undefined;try{for(var s=e[Symbol.iterator](),a;!(n=(a=s.next()).done);n=true){const e=a.value;if(o(e)&&e.attrs.key){if(!(e.tag.id in t))t[e.tag.id]={};if(e.attrs.key in t[e.tag.id])throw new Error("Every view node in an array must have an unique 'key' attribute")}}}catch(e){i=true;r=e}finally{try{if(!n&&s.return!=null){s.return()}}finally{if(i){throw r}}}return e};const F=e.compose(P,L);class S{constructor(e,t){const n=e.tag,i=e.attrs,r=e.children;const s=n.state instanceof Function?n.state(i):n.state;const o=n.actions instanceof Function?n.actions(i):n.actions;const a=n.hooks instanceof Function?n.hooks(i):n.hooks;this.template=n.template;this.state=f({},s||{},i||{});this.actions=this.bindActions(o||{});this.children=r;this.hooks=a||{};this.context=t.setMounting(false);this.templateLock=false;this.updateLock=false;this.element=null;this.node=null;this.innerViews=new Map;this.parametrizedEventListeners=new Map;this.scheduledActions=[];this.mounted=false;this.destroyed=false;this.trackedActionUpdate=false;this.callHook("create")}static instantiate(e,t){if(!o(e))throw new Error("View can only be instantiated from view-nodes");return new S(e,t)}mount(e,t){const n=e.ownerDocument;if(this.destroyed)return;let i=false;if(!A){A=true;i=true}const r=this.renderTemplate();if(Array.isArray(r))throw new Error("View can only have one root element");if(a(r)){const n=this.mountNodeElement(e,t,r,[],this.context);this.element=n}else if(o(r)){const n=this.instantiateInnerView(r,[],this.context);n.mount(e,t);this.element=n.element}else if(l(r)){const i=n.createTextNode(`${r!=null?r:""}`);this.element=i;const s=e.childNodes[t]||null;e.insertBefore(i,s)}else throw new Error("Invalid template type");this.node=r;this.mounted=true;var s=true;var c=false;var d=undefined;try{for(var u=this.scheduledActions[Symbol.iterator](),h;!(s=(h=u.next()).done);s=true){const e=m(h.value,2),t=e[0],n=e[1];this.callAction(t,...n)}}catch(e){c=true;d=e}finally{try{if(!s&&u.return!=null){u.return()}}finally{if(c){throw d}}}this.scheduledActions=[];if(i){const e=V;V=[];for(var f=0;f<e.length;f++){const t=e[f];t()}this.callHook("mount");A=false}else V.push(()=>this.callHook("mount"))}move(e,t){const n=e.childNodes[t]||null;e.insertBefore(this.element,n);this.container=e;this.index=t}update(e=null,t=null){if(this.destroyed)throw new Error("View has been destroyed");const n=this.updateState(e);const i=this.updateChildrenState(t);const r=this.state!==n||this.children!==i;this.state=n;this.children=i;if(this.mounted&&r){this.refresh();this.callHook("update")}return r}refresh(){const e=this.renderTemplate();const t=this.node;this.node=e;this.patch(this.element,t,e,[],this.context)}unmount(e){this.mounted=false;if(a(this.node))this.destroyInnerViews(this.node,[]);else if(o(this.node))this.destroyInnerView([]);if(e)this.element.remove();this.callHook("unmount");this.element=null}destroy(e=true){this.unmount(e);this.callHook("destroy");this.destroyed=true}static getPathKey(e){return e.join(".")}static getAttrKey(e,t){return`${t}.${S.getPathKey(e)}`}renderTemplate(){this.templateLock=true;try{let e=this.template(this.state,this.actions,this.children);if(Array.isArray(e)){if(e.length!==1)throw new Error("Only one root element must be rendered for a view");e=e[0]}e=e!=null?e:"";return e}finally{this.templateLock=false}}bindActions(t){const n={};var i=true;var r=false;var s=undefined;try{for(var o=e.keys(t)[Symbol.iterator](),a;!(i=(a=o.next()).done);i=true){const e=a.value;const i=t[e];if(i instanceof Function)n[e]=((...n)=>this.callAction(t[e],...n));else n[e]=this.bindActions(i)}}catch(e){r=true;s=e}finally{try{if(!i&&o.return!=null){o.return()}}finally{if(r){throw s}}}return n}callAction(e,...t){var n=this;if(this.templateLock)throw new Error("Actions can't be called while rendering view template");if(this.mounted){const i=!this.updateLock;this.updateLock=true;const r=e(...t)(this.state,this.actions);if(r instanceof Promise){this.updateLock=false;if(this.trackedActionUpdate)this.refresh();this.trackedActionUpdate=false;return u(function*(){const e=yield r;if(!n.destroyed)n.update(e);return n.state})()}else{if(i){if(!this.destroyed&&this.mounted){const e=this.update(r);if(!e&&this.trackedActionUpdate)this.refresh();this.trackedActionUpdate=false}else if(!this.destroyed)this.state=this.updateState(r)}else{const e=this.updateState(r);this.trackedActionUpdate=this.trackedActionUpdate||this.state!==e;this.state=e}this.updateLock=false;return this.state}}else this.scheduledActions.push([e,t])}updateState(t=null){if(t==null||t===this.state)return this.state;const n=t!==null?f({},this.state,t):this.state;return!e.shallowEqual(this.state,n)?n:this.state}updateChildrenState(t=null){if(t===null||t===null)return this.children;const n=this.children==null||this.children.length===0;const i=t.length===0;if(n!==i)return t;else return!e.shallowEqual(this.children,t)?t:this.children}callHook(e){if(e in this.hooks)this.hooks[e](this.element,this.state,this.actions)}patch(e,t,n,i,r){if(t===n)return;if(a(t)){if(n==null)this.patchFromNodeToNone(e,t,i);else if(a(n))this.patchFromNodeToNode(e,t,n,i,r);else if(o(n))this.patchFromNodeToView(e,t,n,i,r);else if(l(n))this.patchFromNodeToText(e,t,n,i);else throw new Error("Invalid template type")}else if(o(t)){if(n==null)this.patchFromViewToNone(e,t,i);else if(a(n))this.patchFromViewToNode(e,t,n,i,r);else if(o(n))this.patchFromViewToView(e,t,n,i,r);else if(l(n))this.patchFromViewToText(e,t,n,i);else throw new Error("Invalid template type")}else{if(n==null)this.patchFromTextToNone(e,i);else if(a(n))this.patchFromTextToNode(e,n,i,r);else if(o(n))this.patchFromTextToView(e,n,i,r);else if(l(n))this.patchTextNodes(e,t,n,i);else throw new Error("Invalid template type")}}patchFromTextToNone(e,t){if(k(t))throw new Error("Root element deleted during patch");e.parentNode.removeChild(e)}patchTextNodes(e,t,n,i){if(t!==n){const t=e.ownerDocument.createTextNode(`${n}`);e.replaceWith(t);if(k(i))this.element=t}}patchFromTextToNode(e,t,n,i){const r=this.createNodeElement(e.ownerDocument,t,n,i);e.replaceWith(r);if(k(n))this.element=r}patchFromTextToView(e,t,n,i){const r=this.instantiateInnerView(t,n,i);const s=Array.from(e.parentNode.childNodes).findIndex(t=>t===e);const o=e.parentNode;e.remove();r.mount(o,s);if(k(n))this.element=r.element}patchFromNodeToNone(e,t,n){if(k(n))throw new Error("Root element deleted during patch");this.removeParametrizedListeners(t,n);this.destroyInnerViews(t,n);e.remove()}patchFromNodeToText(e,t,n,i){this.removeParametrizedListeners(t,i);this.destroyInnerViews(t,i);const r=e.ownerDocument.createTextNode(`${n}`);e.replaceWith(r);if(k(i))this.element=r}patchFromNodeToNode(e,t,n,i,r){if(t===n)return;if(t.tag===n.tag){this.updateAttributes(e,t,n,i,r);this.updateChildren(e,t,n,i,r)}else{this.removeParametrizedListeners(t,i);this.destroyInnerViews(t,i);const s=this.createNodeElement(e.ownerDocument,n,i,r);e.replaceWith(s);if(k(i))this.element=s}}patchFromNodeToView(e,t,n,i,r){this.removeParametrizedListeners(t,i);this.destroyInnerViews(t,i);const s=this.instantiateInnerView(n,i,r);const o=Array.from(e.parentNode.childNodes).findIndex(t=>t===e);const a=e.parentNode;e.remove();s.mount(a,o);if(k(i))this.element=s.element}patchFromViewToNone(e,t,n){if(k(n))throw new Error("Root element deleted during patch");this.destroyInnerView(n);e.remove()}patchFromViewToText(e,t,n,i){this.destroyInnerView(i);const r=e.ownerDocument.createTextNode(`${n}`);e.replaceWith(r);if(k(i))this.element=r}patchFromViewToNode(e,t,n,i,r){this.destroyInnerView(i);const s=this.createNodeElement(e.ownerDocument,n,i,r);e.replaceWith(s);if(k(i))this.element=s}patchFromViewToView(e,t,n,i,r){if(t===n)return;if(T(t,n)&&t.attrs.key===n.attrs.key){const e=this.getInstantiatedView(i);e.update(n.attrs,n.children)}else{this.destroyInnerView(i);const t=this.instantiateInnerView(n,i,r);const s=Array.from(e.parentNode.childNodes).findIndex(t=>t===e);const o=e.parentNode;e.remove();t.mount(o,s);if(k(i))this.element=t.element}}unmountPatch(){this.mounted=false;this.callHook("unmount");this.element=null}destroyInnerViews(e,t){for(const n in e.children){const i=t.concat([n]);const r=e.children[n];if(o(r))this.destroyInnerView(i);else if(a(r))this.destroyInnerViews(r,i)}}destroyInnerView(e){const t=this.getInstantiatedView(e);t.destroy(false);this.removeInstantiatedView(e)}createNodeElement(e,t,n,i){let r;i=i.setSvg(i.svg||t.tag==="svg");if(i.svg)r=e.createElementNS("http://www.w3.org/2000/svg",t.tag);else r=e.createElement(t.tag);this.refreshAttributes(r,t,n,i);this.refreshChildren(r,t,n,i);return r}mountNodeElement(e,t,n,i,r){const s=e.ownerDocument;let o;r=r.setSvg(r.svg||n.tag==="svg").setMounting(true);if(r.svg)o=s.createElementNS("http://www.w3.org/2000/svg",n.tag);else o=s.createElement(n.tag);this.refreshAttributes(o,n,i,r);const a=e.childNodes[t]||null;e.insertBefore(o,a);this.refreshChildren(o,n,i,r);return o}refreshAttributes(e,t,n,i){for(const r in t.attrs){const s=t.attrs[r];this.addAttribute(e,r,s,n,i)}}updateAttributes(e,t,n,i,r){if(t===n)return;for(const s in n.attrs){const o=n.attrs[s];if(s in t.attrs){const n=t.attrs[s];this.updateAttribute(e,s,n,o,i,r)}else this.addAttribute(e,s,o,i,r)}for(const s in t.attrs){if(!(s in n.attrs))this.removeAttribute(e,s,t.attrs[s],i,r)}}addAttribute(e,t,n,i,r){if(t==="style"){for(const t in n)this.setStyleProp(e,t,n[t]||"")}else if(n instanceof Function)this.addEventListener(e,g(t),n);else if(N(n)){const r=this.createParametrizedListener(n[0],n[1],i,t);const s=g(t);this.addEventListener(e,s,r)}else if(t==="data"&&n!=null&&typeof n==="object"){for(const t in n)e.dataset[t]=n[t]}else if(t!=="focus"&&t in e&&!r.svg&&n!=null)e[t]=n;else if(typeof n==="boolean"){if(t==="focus"&&e.focus&&e.blur){if(n)e.focus();else e.blur()}else e.setattribute(t,t)}else if(n!=null)e.setAttribute(t,n)}updateAttribute(e,t,n,i,r,s){if(n===i)return;if(E(n,i))return;if(t==="style"){for(const t in n){if(!(t in i))this.removeStyleProp(e,t)}for(const t in i){const n=i[t]||"";this.setStyleProp(e,t,n)}}else if(i instanceof Function){this.removeAttribute(e,t,n,r);this.addAttribute(e,t,i,r)}else if(N(i)){this.removeAttribute(e,t,n,r);this.addAttribute(e,t,i,r)}else if(t==="data"){const t=n!=null&&typeof n==="object";const r=i!=null&&typeof i==="object";if(t&&r){for(const t in n){if(!(t in i))delete e.dataset[t]}for(const t in i)e.dataset[t]=i[t]}else if(t&&!r){for(const t in e.dataset)delete e.dataset[t]}else if(!t&&r){for(const t in i)e.dataset[t]=i[t]}}else if(t!=="focus"&&t in e&&!s.svg)e[t]=i;else if(typeof n==="boolean"){if(t==="focus"){if(e.focus&&e.blur){if(i)e.focus();else e.blur()}}else{if(i)e.setAttribute(t,t);else e.removeAttribute(t)}}else{if(i!=null)e.setAttribute(t,i);else if(n!=null)e.removeAttribute(t)}}removeAttribute(e,t,n,i,r){if(t==="style")e.style.cssText="";else if(n instanceof Function){const i=g(t);this.removeEventListener(e,i,n)}else if(N(n)){const n=this.getParametrizedListener(i,t);const r=g(t);this.removeEventListener(e,r,n)}else if(t==="data"&&n!=null&&typeof n==="object"){for(const t in e.dataset)delete e.dataset[t]}else if(t!=="focus"&&t in e&&!r.svg)e[t]=undefined;else if(typeof n==="boolean"){if(t==="focus"&&e.blur)e.blur();else e.removeAttribute(t)}else if(n!=null)e.removeAttribute(t)}setStyleProp(e,t,n){if(t[0]==="-"){const i=n.indexOf("!important");let r=n;if(i!==-1)r=i!==n.slice(0,i)+n.slice(i+10);r=r.trim().replace(/;$/,"");e.style.setProperty(t,r)}else e.style[t]=n}removeStyleProp(e,t){if(t[0]==="-")e.style.removeProperty(t);else delete e.style[t]}addEventListener(e,t,n){if(e.addEventListener)e.addEventListener(t,n);else if(e.attachEvent)e.attachEvent(y(t),n);else{const i=e[t]&&e[t].listeners||[];if(e[t]!=null)e[t].listeners=i.concat(n);else{const r=(...n)=>e[t].listeners.map(e=>e(...n));r.listeners=i.concat(n);e[t]=r}}}removeEventListener(e,t,n){if(e.removeEventListener)e.removeEventListener(t,n);else if(e.detachEvent)e.detachEvent(y(t),n);else{if(e[t]!=null&&e[t].listeners!=null)e[t].listeners=e[t].listener.filter(e=>e!==n)}}refreshChildren(e,t,n,i){if(!F(t.children))throw new Error("Every view node in an array must have an unique 'key' attribute");for(const r in t.children){const s=t.children[r];const o=n.concat([r]);this.addChildren(e,s,r,o,i)}}addChildren(e,t,n=null,i,r){if(a(t)){if(r.mounting)this.mountNodeElement(e,n,t,i,r);else{const n=this.createNodeElement(e.ownerDocument,t,i,r);e.appendChild(n)}}else if(o(t)){const s=this.instantiateInnerView(t,i,r);s.mount(e,n)}else if(t!=null){const n=e.ownerDocument.createTextNode(`${t}`);e.appendChild(n)}}updateChildren(e,t,n,i,r){if(t===n)return;if(!F(n.children))throw new Error("Every view node in an array must have an unique 'key' attribute");r=r.setSvg(r.svg||n.tag==="svg");const s=Math.max(t.children.length,n.children.length);let o=0;for(let a=0;a<s;a++){const s=e.childNodes[a-o];const l=t.children[a];const c=a in n.children?n.children[a]:null;const d=i.concat([a]);if(l!=null){this.patch(s,l,c,d,r);if(c==null)o+=1}else{this.addChildren(e,c,a,d,r);o-=1}}}instantiateInnerView(e,t,n){const i=S.getPathKey(t);const r=S.instantiate(e,n);this.innerViews.set(i,{view:r,path:t.slice()});return r}getInstantiatedView(e){const t=S.getPathKey(e);const n=this.innerViews.get(t);return n!=null?n.view:null}removeInstantiatedView(e){const t=S.getPathKey(e);this.innerViews.delete(t)}getParametrizedListener(e,t){const n=S.getAttrKey(e,t);return this.parametrizedEventListeners.get(n)}hasParametrizedListener(e,t){const n=S.getAttrKey(e,t);return this.parametrizedEventListeners.has(n)}createParametrizedListener(e,t,n,i){const r=(...n)=>e(...t,...n);const s=S.getAttrKey(n,i);this.parametrizedEventListeners.set(s,r);return r}removeParametrizedListeners(e,t){for(const n in e.attrs){if(this.hasParametrizedListener(t,n))this.removeParametrizedListener(t,n)}for(const n in e.children){const i=t.concat([n]);const r=e.children[n];if(a(r))this.removeParametrizedListeners(r,i)}}removeParametrizedListener(e,t){const n=S.getAttrKey(e,t);this.parametrizedEventListeners.delete(n)}}const I=(e,t,n=0,{insideSvg:r=false}={})=>{let s=t;if(a(t))s=c(i(t));let o=x().setSvg(r);if(!o.svg){const t=e.ownerDocument.defaultView;o=o.setSvg(e instanceof t.SVGElement)}const l=S.instantiate(s,o);l.mount(e,n);return l};const D=e=>t=>{let n;if(r.isViewDeclaration(t))n=t;else if(typeof t==="string")n=i((e,n,i)=>c(t,e,i));else n=i(t);const s=e(n);if(r.isViewDeclaration(s))return s;else return i(s)};const z=e=>{if(e==null)return(e,t)=>t;if(e instanceof Function)return e;else return t=>t[e]};const $=e=>({data:e.data||[],accessor:z(e.indexBy),render:e.render,mountPoint:null,initialized:false,views:{},index:[],prevData:[]});const j=i(({render:e})=>e);const O={};const C=e=>{let t=0;const n=[];var i=true;var r=false;var s=undefined;try{for(var o=e[Symbol.iterator](),a;!(i=(a=o.next()).done);i=true){const e=a.value;if(e.added){var l=true;var c=false;var d=undefined;try{for(var u=e.value[Symbol.iterator](),h;!(l=(h=u.next()).done);l=true){const e=h.value;n.push({added:true,value:e,index:t});t+=1}}catch(e){c=true;d=e}finally{try{if(!l&&u.return!=null){u.return()}}finally{if(c){throw d}}}}else if(e.removed){var f=true;var m=false;var v=undefined;try{for(var p=e.value[Symbol.iterator](),w;!(f=(w=p.next()).done);f=true){const e=w.value;n.push({removed:true,value:e,index:t})}}catch(e){m=true;v=e}finally{try{if(!f&&p.return!=null){p.return()}}finally{if(m){throw v}}}}else{var y=true;var g=false;var b=undefined;try{for(var x=e.value[Symbol.iterator](),N;!(y=(N=x.next()).done);y=true){const e=N.value;n.push({value:e,index:t});t+=1}}catch(e){g=true;b=e}finally{try{if(!y&&x.return!=null){x.return()}}finally{if(g){throw b}}}}}}catch(e){r=true;s=e}finally{try{if(!i&&o.return!=null){o.return()}}finally{if(r){throw s}}}const E={};for(const e in n){const t=n[e];if(t.added)E[t.value]=e}for(let e=0;e<n.length;e++){const t=n[e];if(t.removed&&t.value in E){n.splice(e,1);e--}}return n};O.initialize=(()=>e=>{const t=m(e.mountPoint,2),n=t[0],i=t[1];n.childNodes[i].remove();e.initialized=true;e.index=[];e.views={};for(const t in e.data){const r=+t;const s=e.data[r];const o=e.accessor(s,r,e.data);e.index.push(o);const a=c(j,{render:e.render(s,r,e.data)});const l=I(n,a,i+r);e.views[o]={view:l,index:i+r}}K(e.index);e.prevData=e.data});const K=e=>{const t={};var n=true;var i=false;var r=undefined;try{for(var s=e[Symbol.iterator](),o;!(n=(o=s.next()).done);n=true){const e=o.value;if(e in t)throw new Error("Item keys must be unique");t[e]=true}}catch(e){i=true;r=e}finally{try{if(!n&&s.return!=null){s.return()}}finally{if(i){throw r}}}return e};O.diffUpdate=(()=>e=>{const n=m(e.mountPoint,2),i=n[0],r=n[1];const s=e.data.map(e.accessor);K(s);const o=t.diffArrays(e.index,s);const a=C(o);const l={};for(const t in a){const n=a[t];const s=n.value;const o=+n.index;const d=s in e.views;if(n.added&&s!==e.index[o]){if(d){const t=n.index;const r=e.index[t];const o=e.views[s],a=o.index,c=o.view;const d=e.views[r].view;c.move(i,t);if(e.prevData[a]!==e.data[t])c.update({render:e.render(e.data[t],t,e.data)});d.move(i,a+1);if(e.prevData[t]!==e.data[a])d.update({render:e.render(e.data[a],t,e.data)});e.views[s]={view:c,index:t};e.views[r]={view:d,index:a};l[s]=true;l[r]=true}else{const t=e.data[o];const n=c(j,{render:e.render(t,o,e.data)});const a=I(i,n,r+o);e.views[s]={view:a,index:r+o}}}else if(n.removed){const t=e.views[s].view;t.destroy();delete e.views[s]}else if(!(s in l)){const t=e.data[o];if(t!==e.prevData[o])e.views[s].view.update({render:e.render(t,o,e.data)})}}e.index=s;e.prevData=e.data});O.update=(()=>(e,t)=>{if(e.mountPoint==null)return;if(e.initialized)t.diffUpdate();else t.initialize()});const U={};U.mount=((e,t,n)=>{t.mountPoint=[e.parentNode,Array.prototype.indexOf.call(e.parentNode.childNodes,e)];n.update()});U.update=((e,t,n)=>{n.update()});U.unmount=((e,t)=>{t.mountPoint=null;t.initialized=false;t.views={};t.index=[];t.prevData=[]});const M=i(null,$,O,U);const q=i((e,t,n)=>{let i=n[0];if(n.length>1)throw new Error("You must provide only one child to the List, it can be a render function or a jsx node");if(i==null)return null;i=i instanceof Function?i:()=>i;return c(M,f({},e,{render:i}))});const H=i((t,n,i)=>{let r=i[0];if(i.length>1)throw new Error("You must provide only one child to the Map, it can be a render function or a jsx node");if(r==null)return null;r=r instanceof Function?r:()=>r;const s=([e,t],n,i)=>r(t,e,i,n);const o=e.keys(t.data||{}).map(e=>[e,t.data[e]]);const a=([e])=>e;return c(M,{data:o,indexBy:a,render:s})},{data:{}});let W="production";try{W=process.env.NODE_ENV}catch(e){}const B=W==="production";const R=!B;const _=typeof self==="object"&&self.self===self&&self||typeof global==="object"&&global.global===global&&global||this;const Y="console"in _;const G=Y&&"warn"in _.console;const J=e=>{if(R&&G)_.console.warn(e)};exports.view=i;exports.h=c;exports.isElementNode=a;exports.isViewNode=o;exports.isTextNode=l;exports.Node=s;exports.mount=I;exports.decorator=D;exports.List=q;exports.Map=H;exports.isDevelopment=R;exports.isProduction=B;exports.warn=J;
